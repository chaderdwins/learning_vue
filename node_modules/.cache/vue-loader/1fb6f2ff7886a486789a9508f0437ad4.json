{"remainingRequest":"/Users/cerdwins/Documents/practice/learning_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cerdwins/Documents/practice/learning_vue/src/components/VideoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cerdwins/Documents/practice/learning_vue/src/components/VideoList.vue","mtime":1554913451496},{"path":"/Users/cerdwins/Documents/practice/learning_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cerdwins/Documents/practice/learning_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cerdwins/Documents/practice/learning_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cerdwins/Documents/practice/learning_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VideoListItem from './VideoListItem';\n\nexport default {\n  name: 'VideoList',\n  components: {\n    VideoListItem\n  },\n  // props will tell the child what to expect to receive from the parent\n  props: {\n    videos: Array\n  },\n  methods: {\n    onVideoSelect(video) {\n      this.$emit('videoSelect', video);\n    }\n  }\n};\n",{"version":3,"sources":["VideoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VideoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <ul class=\"list-group col-md-4\">\n        <VideoListItem \n        v-for=\"video in videos\"\n        v-bind:video=\"video\"\n        v-bind:key=\"video.etag\"\n        @videoSelect=\"onVideoSelect\"\n        >\n        </VideoListItem>\n    </ul>\n</template>\n\n\n<script>\nimport VideoListItem from './VideoListItem';\n\nexport default {\n  name: 'VideoList',\n  components: {\n    VideoListItem\n  },\n  // props will tell the child what to expect to receive from the parent\n  props: {\n    videos: Array\n  },\n  methods: {\n    onVideoSelect(video) {\n      this.$emit('videoSelect', video);\n    }\n  }\n};\n</script>\n\n<style>\n\n</style>\n\n\n"]}]}